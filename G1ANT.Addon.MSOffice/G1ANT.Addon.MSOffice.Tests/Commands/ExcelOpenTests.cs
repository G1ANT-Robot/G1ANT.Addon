
using G1ANT.Addon.MSOffice;


using System;
using System.Diagnostics;
using System.IO;
using NUnit.Framework;
using System.Reflection;

using System.Threading;
using G1ANT.Engine;
using G1ANT.Language;
using G1ANT.Addon.MSOffice.Tests.Properties;

namespace G1ANT.Addon.MSOffice.Tests
{
    [TestFixture]
    [Apartment(ApartmentState.STA)]
    public class ExcelOpenTests
    {
      
        Scripter scripter;
        static string xlsPath;


        [OneTimeSetUp]
        public void ClassInit()
        {
            Environment.CurrentDirectory = TestContext.CurrentContext.TestDirectory;
            
        }

        [SetUp]
        public void TestInit()
        {
            scripter = new Scripter();
            scripter.InitVariables.Clear();
            Language.Addon addon = Language.Addon.Load(@"G1ANT.Addon.MSOffice.dll");
            xlsPath = Assembly.GetExecutingAssembly().UnpackResourceToFile(nameof(Resources.TestWorkbook), "xlsm");
            scripter.InitVariables.Add("xlsPath", new TextStructure(xlsPath));
        }

        private void KillProcesses()
        {
            foreach (Process p in Process.GetProcessesByName("excel"))
            {
                try
                {
                    p.Kill();
                }
                catch { }
            }
        }

        private int ExcelProcessesCount()
        {
            return Process.GetProcessesByName("excel").Length;
        }

        [Test]
        [Timeout(MSOfficeTests.TestsTimeout)]
        public void ExcelOpenTest()
        {
            KillProcesses();
            scripter.Text =("excel.open");
            scripter.Run();
            Assert.IsTrue(ExcelProcessesCount() > 0);
            scripter.Text = ("excel.close");
            scripter.Run();
        }

        [Test]
        [Timeout(MSOfficeTests.TestsTimeout)]
        public void ExcelOpenWithPathTest()
        {
            KillProcesses();
            scripter.Text =($"excel.open {SpecialChars.Variable}xlsPath");
            scripter.Run();
            Assert.IsTrue(ExcelProcessesCount() > 0);
            scripter.Text = ("excel.close");
            scripter.Run();
        }

        [Test]
        [Timeout(MSOfficeTests.TestsTimeout)]
        public void ExcelOpenWithPathSheetName()
        {
            scripter.Text = ($"excel.open {SpecialChars.Variable}xlsPath sheet Macro");
            scripter.Run();
            Assert.IsTrue(Process.GetProcessesByName("excel").Length > 0);
            scripter.Text = ("excel.close");
            scripter.Run();
        }

        [TearDown]
        public void TestCleanUp()
        {
            Process[] proc = Process.GetProcessesByName("excel");
            if (proc.Length != 0)
            {
                KillProcesses();
            }
        }
    }
}
